<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GiyaYon&#39;s Blog</title>
  
  
  <link href="http://giyayonlib.com/atom.xml" rel="self"/>
  
  <link href="http://giyayonlib.com/"/>
  <updated>2023-03-11T17:27:49.051Z</updated>
  <id>http://giyayonlib.com/</id>
  
  <author>
    <name>GiyaYon</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>软件测试学习记录-理论篇</title>
    <link href="http://giyayonlib.com/2023/03/12/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA%E7%AC%94%E8%AE%B0/"/>
    <id>http://giyayonlib.com/2023/03/12/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA%E7%AC%94%E8%AE%B0/</id>
    <published>2023-03-11T17:16:22.569Z</published>
    <updated>2023-03-11T17:27:49.051Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本书是《软件测试技术及项目安利实战（微课视频版）》乔冰琴</p><p>软件测试是软件开发过程中一个重要的组成部分，用来确定一个程序的品质或性能是否符合开发之前所提出的要求，是软件质量保证的关键步骤。发现软件中的错误，对软件是否符合设计要求进行有关的验证以及评估软件的质量，最后实现交付给客户。</p><h2 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h2><h3 id="第一章：软件测试概述"><a href="#第一章：软件测试概述" class="headerlink" title="第一章：软件测试概述"></a>第一章：软件测试概述</h3><h3 id="第二章：软件测试入门"><a href="#第二章：软件测试入门" class="headerlink" title="第二章：软件测试入门"></a>第二章：软件测试入门</h3><h3 id="第三章：软件测试技术体系"><a href="#第三章：软件测试技术体系" class="headerlink" title="第三章：软件测试技术体系"></a>第三章：软件测试技术体系</h3><h3 id="第四章：软件测试过程管理"><a href="#第四章：软件测试过程管理" class="headerlink" title="第四章：软件测试过程管理"></a>第四章：软件测试过程管理</h3><h3 id="第五章：白盒测试用例设计以及应用"><a href="#第五章：白盒测试用例设计以及应用" class="headerlink" title="第五章：白盒测试用例设计以及应用"></a>第五章：白盒测试用例设计以及应用</h3><h3 id="第六章：黑盒测试用例设计以及应用"><a href="#第六章：黑盒测试用例设计以及应用" class="headerlink" title="第六章：黑盒测试用例设计以及应用"></a>第六章：黑盒测试用例设计以及应用</h3><h3 id="第七章：接口测试基础"><a href="#第七章：接口测试基础" class="headerlink" title="第七章：接口测试基础"></a>第七章：接口测试基础</h3><h3 id="第八章：接口测试"><a href="#第八章：接口测试" class="headerlink" title="第八章：接口测试"></a>第八章：接口测试</h3><h2 id="技术篇"><a href="#技术篇" class="headerlink" title="技术篇"></a>技术篇</h2><h3 id="第九章-Unittest单元测试框架"><a href="#第九章-Unittest单元测试框架" class="headerlink" title="第九章 Unittest单元测试框架"></a>第九章 Unittest单元测试框架</h3><h3 id="第十章-接口自动化测试"><a href="#第十章-接口自动化测试" class="headerlink" title="第十章 接口自动化测试"></a>第十章 接口自动化测试</h3><h3 id="第十一章-WebUI自动化测试"><a href="#第十一章-WebUI自动化测试" class="headerlink" title="第十一章 WebUI自动化测试"></a>第十一章 WebUI自动化测试</h3><h2 id="扩展篇"><a href="#扩展篇" class="headerlink" title="扩展篇"></a>扩展篇</h2><h3 id="第十二章-性能测试"><a href="#第十二章-性能测试" class="headerlink" title="第十二章 性能测试"></a>第十二章 性能测试</h3><h3 id="第十三章-移动APP非功能测试"><a href="#第十三章-移动APP非功能测试" class="headerlink" title="第十三章 移动APP非功能测试"></a>第十三章 移动APP非功能测试</h3><h3 id="第十四章-渗透性测试"><a href="#第十四章-渗透性测试" class="headerlink" title="第十四章 渗透性测试"></a>第十四章 渗透性测试</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本书是《软件测试技术及项目安利实战（微课视频版）》乔冰琴&lt;/p&gt;
&lt;p&gt;软件测试是软件开发过程中一个重要的组成部分，用来确定一个程序的品质或</summary>
      
    
    
    
    <category term="软件工程" scheme="http://giyayonlib.com/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/"/>
    
    <category term="软件基础" scheme="http://giyayonlib.com/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E5%9F%BA%E7%A1%80/"/>
    
    <category term="软件测试" scheme="http://giyayonlib.com/categories/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E5%9F%BA%E7%A1%80/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="测试" scheme="http://giyayonlib.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
    <category term="软件开发" scheme="http://giyayonlib.com/tags/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>渗透测试学习记录-理论篇</title>
    <link href="http://giyayonlib.com/2023/03/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA%E7%AC%94%E8%AE%B0/"/>
    <id>http://giyayonlib.com/2023/03/11/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%90%86%E8%AE%BA%E7%AC%94%E8%AE%B0/</id>
    <published>2023-03-11T12:25:18.692Z</published>
    <updated>2023-03-11T17:26:35.743Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本书是《网络安全渗透测试》王晓东 西安电子科技大学出版社.</p><p>在信息安全领域中，渗透测试是公认度非常高的新型安全测试方法。从其机理而言，渗透测试属于破坏性检验的范畴。在前三章讲渗透测试的基础概念；第四章讲到信息收集，五到七章讲到服务器 客户端 网络设备渗透测试，第八章讲到后渗透测试，第九章讲到社会工程学，十到十一讲到工控网络和无线网络的测试，十二到十三章讲到自动化框架，最后一章讲了质量控制介绍</p><h2 id="第一章：概述"><a href="#第一章：概述" class="headerlink" title="第一章：概述"></a>第一章：概述</h2><h3 id="1-什么是渗透测试？"><a href="#1-什么是渗透测试？" class="headerlink" title="1.什么是渗透测试？"></a>1.什么是渗透测试？</h3><blockquote><p>渗透测试是服务于信息安全的保障技术</p><p>信息安全又可分为狭义上的信息安全和广义上的信息安全，狭义上是以密码学为基础，服役通信网络、计算机编程等方面相关信息保护技术。</p></blockquote><h3 id="2-渗透测试的分类有哪些？各有什么特点？"><a href="#2-渗透测试的分类有哪些？各有什么特点？" class="headerlink" title="2.渗透测试的分类有哪些？各有什么特点？"></a>2.渗透测试的分类有哪些？各有什么特点？</h3><blockquote><p>1.按照协议分类</p><p>​按照OSI七层模型与用户一层的八层进行针对性试探</p><p>2.按照信息公开与否分类</p><p>​是否通过公开测试来进行测试</p><p>3.按照测试方法分类</p><p>​黑盒测试：对服务器内部情况一无所知，只有DNS、Web、E-mail公开的服务器知道</p><p>​白盒测试：通过正规渠道获取到公司内部的服务器结构框架针对性的模拟内部企业雇员的越权行为</p><p>4.按照测试目标分类</p><p>​专门的操作系统，数据库，网络设备进行测试</p></blockquote><h3 id="3-渗透测试的主要方法有哪些？"><a href="#3-渗透测试的主要方法有哪些？" class="headerlink" title="3.渗透测试的主要方法有哪些？"></a>3.渗透测试的主要方法有哪些？</h3><blockquote><ol><li>主动侦查：这是收集有关目标系统的信息的过程。渗透测试人员会使用各种技术和工具，如端口扫描、DNS信息收集和Whois查询等，来收集有关目标系统的详细信息。</li><li>社会工程学攻击：这是一种攻击人员通过欺骗、伪装等方式欺骗用户揭露密码、访问权限等敏感信息的技术。渗透测试人员会通过各种方式测试系统用户的社会工程学素养，包括钓鱼、垃圾邮件和网络欺诈等。</li><li>漏洞扫描：这是通过使用自动化工具扫描目标系统中的漏洞，以确定目标系统中存在的安全漏洞。常见的漏洞扫描工具包括OpenVAS、Nessus和Nmap等。</li><li>漏洞利用：这是一种尝试利用发现的安全漏洞来获取系统访问权限的行为。这包括使用各种技术和工具，如暴力破解、字典攻击和缓冲区溢出等。</li><li>密码攻击：这是一种针对系统中存储的密码进行攻击的行为。渗透测试人员会使用各种密码破解工具，如John the Ripper和Hashcat等，以尝试破解系统中存储的密码。</li><li>社会工程学测试：这是一种测试目标系统用户的社会工程学素养的行为。渗透测试人员会模拟各种攻击场景，以测试系统用户对攻击的反应和应对能力。</li></ol></blockquote><h3 id="4-渗透测试与软件测试的区别是什么？"><a href="#4-渗透测试与软件测试的区别是什么？" class="headerlink" title="4.渗透测试与软件测试的区别是什么？"></a>4.渗透测试与软件测试的区别是什么？</h3><blockquote><p>渗透测试（Penetration Testing）也被称为漏洞评估，它是指一种通过模拟黑客攻击的方式，来评估计算机系统、网络或应用程序的安全性的方法。渗透测试通常涉及以下步骤：信息收集、漏洞扫描、漏洞利用、权限提升、数据获取、漏洞利用后清理等。渗透测试需要深入了解系统架构和网络安全知识，通常由专业的安全测试工程师完成。</p><p>软件测试（Software Testing）是指在开发软件的过程中，对软件的各项功能、性能、安全性等进行全面的测试和验证。软件测试通常涉及以下步骤：测试计划、测试用例设计、测试执行、缺陷管理和测试报告。软件测试需要深入了解软件开发和测试方法，通常由专业的测试工程师完成。</p><p>渗透测试侧重于系统安全性的评估和漏洞发现，需要深入了解系统安全领域的知识，而软件测试侧重于软件质量的验证和提高，需要深入了解软件开发和测试方法。</p></blockquote><h3 id="5-论述渗透测试与黑客攻击的区别？"><a href="#5-论述渗透测试与黑客攻击的区别？" class="headerlink" title="5.论述渗透测试与黑客攻击的区别？"></a>5.论述渗透测试与黑客攻击的区别？</h3><blockquote><p>区别是前者受到严格的约束</p></blockquote><h3 id="6-简述渗透测试的发展过程？"><a href="#6-简述渗透测试的发展过程？" class="headerlink" title="6.简述渗透测试的发展过程？"></a>6.简述渗透测试的发展过程？</h3><blockquote><p>历史课不喜欢，密码学的发展过程与现代计算机结合新出现的技术</p></blockquote><h3 id="7-渗透测试的步骤是什么？"><a href="#7-渗透测试的步骤是什么？" class="headerlink" title="7.渗透测试的步骤是什么？"></a>7.渗透测试的步骤是什么？</h3><blockquote><p>渗透测试通常涉及以下步骤：信息收集、漏洞扫描、漏洞利用、权限提升、数据获取、漏洞利用后清理等。</p></blockquote><h3 id="8-渗透测试的工具有哪些？"><a href="#8-渗透测试的工具有哪些？" class="headerlink" title="8.渗透测试的工具有哪些？"></a>8.渗透测试的工具有哪些？</h3><blockquote><p>1.Metasploit</p><p>2.Nessus</p><p>3.Nmap</p><p>4.Burp Suite</p><p>5.OWASP ZAP</p><p>6.SQLmap</p><p>7.Kali Linux</p></blockquote><h3 id="9-渗透测试的原则有哪些？"><a href="#9-渗透测试的原则有哪些？" class="headerlink" title="9.渗透测试的原则有哪些？"></a>9.渗透测试的原则有哪些？</h3><blockquote><p>1.标准性原则：需要遵守相关规定</p><p>2.规范性原则：有良好的写作格式，清楚地记录所用工具以及策略</p><p>3.可控性原则：对工作的可控，在双方认可的范围内进行</p><p>4.影响性原则：测试过程不可让系统崩溃或网络造成破坏，在业务时间允许的情况进行，做到影响小</p><p>5.整体性和不可缺原则：测试对象不可在规定的范围外进行</p><p>6.保密性原则：过程与结果都要保密，不可泄漏</p></blockquote><h3 id="10-渗透测试的道德约束和法律约束是什么？"><a href="#10-渗透测试的道德约束和法律约束是什么？" class="headerlink" title="10.渗透测试的道德约束和法律约束是什么？"></a>10.渗透测试的道德约束和法律约束是什么？</h3><blockquote><p>看法律文件</p></blockquote><h2 id="第二章：渗透测试原理与模型"><a href="#第二章：渗透测试原理与模型" class="headerlink" title="第二章：渗透测试原理与模型"></a>第二章：渗透测试原理与模型</h2><h3 id="1-什么是网络攻击？网络攻击的手段有哪些？"><a href="#1-什么是网络攻击？网络攻击的手段有哪些？" class="headerlink" title="1.什么是网络攻击？网络攻击的手段有哪些？"></a>1.什么是网络攻击？网络攻击的手段有哪些？</h3><blockquote><p>网络攻击是针对计算机信息系统、基础设施、计算机网络或个人计算机设备的任何类型的进攻动作。</p><ol><li>拒绝服务攻击（Denial of Service, DoS）：通过发送大量无效请求或攻击数据包，使服务器负载过大，最终导致服务不可用。</li><li>木马病毒攻击：将木马病毒程序传入目标主机，并通过该程序获取或窃取计算机中的敏感信息。</li><li>黑客攻击：利用漏洞攻击操作系统或应用程序，获取管理员权限，并在系统中实施各种破坏性行为。</li><li>社会工程学攻击：通过伪装成信任的个人或组织，诱骗用户提供敏感信息，如密码、账号等。</li><li>网络钓鱼攻击：利用电子邮件、短信等方式诱导用户点击链接或下载附件，以获取用户的账号和密码等敏感信息。</li><li>网络间谍攻击：通过入侵目标网络或计算机，获取目标组织或个人的敏感信息，如商业机密、个人隐私等。</li><li>网络入侵检测攻击：利用漏洞攻击网络入侵检测系统，从而获得管理员权限，控制系统并绕过安全检测。</li></ol></blockquote><h3 id="2-密码分析如何按照攻击的方式和条件进行分类？"><a href="#2-密码分析如何按照攻击的方式和条件进行分类？" class="headerlink" title="2.密码分析如何按照攻击的方式和条件进行分类？"></a>2.密码分析如何按照攻击的方式和条件进行分类？</h3><blockquote><p>密码分析是指通过各种手段分析加密或编码后的数据，以便揭示加密算法、密码、密钥等信息。根据攻击的方式和条件，密码分析可以分为以下几类：</p><p>1.1 字典攻击：利用事先准备好的字典文件，尝试对目标加密数据进行猜解，以获得密码信息。</p><p>1.2 暴力破解：穷举所有可能的密码组合，直到找到正确的密码为止。</p><p>1.3 差分攻击：针对加密算法中的差分运算进行攻击，通过观察输入和输出之间的关系来破解密钥。</p><p>1.4 工具攻击：使用各种密码破解工具，如John the Ripper、Hashcat等。</p><p>1.5 侧信道攻击：通过观察目标设备的电磁辐射、功耗、时间等信息，来推测目标设备的加密算法、密钥等信息。</p><p>1.6 社会工程学攻击：通过与目标用户的交互来获取密码等敏感信息，如钓鱼邮件、假冒网站等。</p><p>这些攻击方式可能会结合使用，以提高攻击的成功率。密码分析的目的是为了揭示加密算法的漏洞，从而加强密码的安全性。</p></blockquote><h3 id="3-什么是漏洞？漏洞的分类有哪些？画图说明安全漏洞的生命周期。"><a href="#3-什么是漏洞？漏洞的分类有哪些？画图说明安全漏洞的生命周期。" class="headerlink" title="3.什么是漏洞？漏洞的分类有哪些？画图说明安全漏洞的生命周期。"></a>3.什么是漏洞？漏洞的分类有哪些？画图说明安全漏洞的生命周期。</h3><blockquote><p>漏洞是系统中存在的一些功能性或安全性的逻辑缺陷，包括可能导致威胁、损坏计算机系统安全性的因素，也可以认为是计算机系统在硬件、软件、协议的具体实现或系统安全策略上存在的所有缺陷和不足。</p><p>1.身份验证与授权漏洞：指攻击者可以通过各种方式绕过身份验证或者授权机制，获得未授权的访问权限。</p><p>2.输入验证漏洞：指攻击者可以利用输入验证不充分的漏洞来执行恶意代码或者通过SQL注入等方式访问和修改数据。</p><p>3.加密和安全协议漏洞：指攻击者可以利用加密算法或安全协议中的漏洞，获取数据或者执行恶意代码。</p><p>4.网络服务漏洞：指网络服务应用程序存在漏洞，导致攻击者可以通过攻击服务来获取系统权限或者执行恶意操作。</p><p>5.操作系统漏洞：指操作系统本身存在的漏洞，攻击者可以利用漏洞获取系统权限或执行恶意操作。</p><p>安全漏洞的生命周期包括以下几个阶段：</p><p>1.发现漏洞：安全漏洞的第一步是发现它们，可以是由安全专业人员、黑客或其他人员发现。</p><p>2.分析漏洞：在这个阶段，安全专业人员需要分析漏洞，确定漏洞的性质和影响范围。</p><p>3.利用漏洞：攻击者利用漏洞来获取系统访问权限、执行恶意代码或窃取敏感信息。</p><p>4.公开漏洞：漏洞可能会被安全专家或黑客公开披露，从而暴露给广大用户。</p><p>5.修复漏洞：漏洞修复是防止攻击的最佳方法，需要厂商或管理员及时修补漏洞，以防止攻击者利用漏洞攻击系统。</p></blockquote><h3 id="4-区分Shellcode、EXP、Payload"><a href="#4-区分Shellcode、EXP、Payload" class="headerlink" title="4.区分Shellcode、EXP、Payload."></a>4.区分Shellcode、EXP、Payload.</h3><blockquote><p>EXP： 对漏洞如何利用的纤细说明或者是一段演示漏洞攻击的代码，EXP 可以帮助使用者了解漏洞的机理以及利用的方法。</p><p>Payload：攻破目标系统后所进行的操作，目的是提升权限、加强控制等操作。</p><p>Shellcode：指一小段用来执行特定任务的机器码，通常是用于利用软件漏洞的过程中，用于获得对受攻击计算机的控制权限。Shellcode通常被注入到受攻击计算机的内存中，并被执行。Shellcode可以执行各种各样的任务，如创建一个远程访问后门、下载并执行恶意软件、以及执行其他指定的操作。</p></blockquote><h3 id="5-简述攻击树、攻击图、特权图、Petri、状态转移攻击模型"><a href="#5-简述攻击树、攻击图、特权图、Petri、状态转移攻击模型" class="headerlink" title="5.简述攻击树、攻击图、特权图、Petri、状态转移攻击模型"></a>5.简述攻击树、攻击图、特权图、Petri、状态转移攻击模型</h3><blockquote><p>攻击树（Attack Tree）是一种用于表达攻击路径的方法，它通过树状结构展示攻击者达到某个目标的所有可能路径和方法，每个节点代表一种攻击手段或条件，从根节点开始，通过不断地分解和细化攻击目标，最终到达攻击成功的叶子节点。</p><p>攻击图（Attack Graph）是一种用于分析网络攻击路径的方法，它通过展示攻击者攻击网络时可能的路径、攻击点和攻击方式来分析网络攻击的可能性和危害程度。</p><p>特权图（Privilege Graph）是一种用于描述系统权限控制的方法，它通过展示系统中各个主体（如用户、程序、服务等）的权限关系来分析系统的安全性。</p><p>Petri网（Petri Net）是一种用于描述并发系统的方法，它通过表示系统中的各个状态和状态之间的变迁关系来分析系统的行为和安全性。</p><p>状态转移攻击模型（STAM）是一种基于状态机模型的攻击模型，它通过描述系统中各个状态以及状态之间的转移关系来分析攻击者在系统中的行为和攻击路径。STAM通常用于分析网络协议和安全协议的安全性。</p></blockquote><h3 id="6-简述攻击方案的生成过程"><a href="#6-简述攻击方案的生成过程" class="headerlink" title="6.简述攻击方案的生成过程"></a>6.简述攻击方案的生成过程</h3><blockquote><ol><li>收集信息：攻击者通过各种手段获取目标系统的信息，包括系统架构、操作系统版本、应用程序版本、网络拓扑结构等。</li><li>制定攻击目标：根据收集到的信息，攻击者制定攻击目标，选择合适的攻击手段和工具，以及攻击的时间和地点。</li><li>分析攻击面：攻击者分析目标系统的攻击面，即可能被攻击的漏洞或弱点，确定攻击方案的方向和重点。</li><li>选择攻击技术：攻击者根据攻击面和攻击目标，选择适合的攻击技术，例如漏洞利用、社会工程学攻击、拒绝服务攻击等。</li><li>编写攻击代码：攻击者根据选择的攻击技术，编写攻击代码或利用已有的攻击代码。</li><li>测试攻击代码：攻击者测试攻击代码的有效性和可靠性，确保攻击能够成功。</li><li>部署攻击代码：攻击者将攻击代码部署到目标系统中，执行攻击。</li><li>操作维护：攻击者在攻击过程中不断进行操作和维护，以保证攻击的成功和持续性。</li></ol></blockquote><h2 id="第三章：渗透测试环境工程"><a href="#第三章：渗透测试环境工程" class="headerlink" title="第三章：渗透测试环境工程"></a>第三章：渗透测试环境工程</h2><h3 id="1-渗透测试的要素有哪些？"><a href="#1-渗透测试的要素有哪些？" class="headerlink" title="1.渗透测试的要素有哪些？"></a>1.渗透测试的要素有哪些？</h3><blockquote><p>包括测试质量、人员、技术、标准、资源</p><p>质量是测试目标的核心</p><p>人员起决定因素</p><p>技术是工具</p><p>标准是规范要求</p><p>资源是所需基础</p></blockquote><h3 id="2-简述测试覆盖率与测试效率的关系"><a href="#2-简述测试覆盖率与测试效率的关系" class="headerlink" title="2.简述测试覆盖率与测试效率的关系"></a>2.简述测试覆盖率与测试效率的关系</h3><blockquote><p>测试覆盖率是用来度量测试完整性的一种手段，是测试技术有效性的一个指标。</p><p>测试效率是指测试过程中执行测试人物的时间有效性。</p><p>提升测试效率有利于进一步增加测试覆盖率</p></blockquote><h3 id="3-对渗透测试人员的要求有哪些？如何进行训练？"><a href="#3-对渗透测试人员的要求有哪些？如何进行训练？" class="headerlink" title="3.对渗透测试人员的要求有哪些？如何进行训练？"></a>3.对渗透测试人员的要求有哪些？如何进行训练？</h3><blockquote><p>1.专业的理论素质</p><p>2.分析解决问题能力</p><p>3.创新思维</p><p>4.团队沟通能力</p><p>5.法律意识与知识</p><p>公认度较高的渗透测试能力训练的手段包括参加CTF和网络对抗训练</p></blockquote><h3 id="4-简述Docker与虚拟机的区别"><a href="#4-简述Docker与虚拟机的区别" class="headerlink" title="4.简述Docker与虚拟机的区别"></a>4.简述Docker与虚拟机的区别</h3><blockquote><p>虚拟机是通过软件模拟的具有完整硬件系统功能的运行在一个完全隔离环境中的完整计算机系统</p><p>Docker是一个开源的应用容器引擎。让开发者打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的Linux或Windows机器上，也可以实现虚拟化。</p><p>区别：</p><p>1.Docker守护进程可以直接与主操作系统进行通信，为各个Docker容器分配资源；它还可以将容器与主操作系统隔离，并将各个容器相互隔离。</p><p>2.虚拟机的启动需要几分钟，而Docker容器可以在几毫秒内启动。</p><p>3.Docker没有从操作系统，节省了大量的磁盘空间。</p><p>4.虚拟机更擅长于彻底隔离整个运行环境。例如，云服务提供商通常采用虚拟机技术隔离不同的用户，而Docker通常于隔离不同的应用，例如前端、后端、以及数据库</p></blockquote><h3 id="5-介绍攻击机平台搭建方法。"><a href="#5-介绍攻击机平台搭建方法。" class="headerlink" title="5.介绍攻击机平台搭建方法。"></a>5.介绍攻击机平台搭建方法。</h3><blockquote><p>攻击机平台是指用于进行渗透测试和安全评估的计算机系统，它可以模拟真实攻击场景并进行安全测试。以下是攻击机平台搭建的一般步骤：</p><ol><li>确定操作系统：选择一个适合渗透测试的操作系统，如Kali Linux、Parrot OS、BlackArch等。</li><li>安装必要的软件：根据具体的渗透测试需求，安装必要的软件，如Nmap、Metasploit、Burp Suite、Hydra、John the Ripper等。</li><li>配置网络：在攻击机平台上设置IP地址、网关、DNS服务器等，确保能够访问被测系统。</li><li>安装虚拟机：如果需要模拟多种攻击场景，可以在攻击机平台上安装虚拟机软件，如VirtualBox、VMware等，并安装适合的操作系统和软件。</li><li>模拟攻击场景：根据渗透测试的目标和要求，模拟真实攻击场景，如Web应用程序渗透测试、无线网络攻击、社会工程学攻击等。</li><li>记录测试结果：在攻击机平台上记录测试过程中的操作和结果，以便进行分析和总结。</li></ol><p>在搭建攻击机平台时，需要注意以下几点：</p><ol><li>安全防护：攻击机平台可能会存在安全风险，需要加强系统安全防护措施，如加密磁盘、安装防病毒软件、关闭不必要的服务等。</li><li>合法性问题：在进行渗透测试时，需要遵守法律法规，确保测试行为的合法性，避免对他人造成损失和影响。</li><li>维护成本：攻击机平台需要进行定期维护和更新，以确保系统稳定性和安全性，需要有专业的人员进行管理和维护。</li></ol></blockquote><h3 id="6-简述靶场技术。"><a href="#6-简述靶场技术。" class="headerlink" title="6.简述靶场技术。"></a>6.简述靶场技术。</h3><blockquote><p>靶场技术是一种安全测试方法，旨在模拟真实世界中的攻击场景，以评估系统的安全性和弱点。靶场通常是虚拟或真实的系统或网络环境，其中安装了各种漏洞和弱点，以模拟真实世界中的攻击情况。靶场可以用于测试安全人员的技能和知识，以及测试安全工具和技术的有效性。</p><p>靶场技术的基本过程如下：</p><ol><li>确定测试目标：确定要测试的系统或网络，以及测试的目的和范围。</li><li>收集信息：收集与测试目标有关的信息，包括IP地址、端口、操作系统版本、应用程序等。</li><li>定义攻击场景：根据测试目标和信息，定义攻击场景，包括攻击类型、攻击方法、攻击者角色等。</li><li>准备靶场：设置靶场环境，包括安装漏洞和弱点，设置攻击场景和网络拓扑等。</li><li>进行测试：进行测试，模拟攻击场景，测试系统的安全性和弱点。</li><li>分析结果：分析测试结果，确定系统的安全性和弱点，制定改进计划。</li></ol><p>靶场技术可以帮助安全人员了解攻击者的思维方式和攻击方式，帮助他们更好地了解系统和网络的安全性，以便更好地保护其机密性、完整性和可用性。</p></blockquote><h3 id="7-简述PETS渗透测试标准。"><a href="#7-简述PETS渗透测试标准。" class="headerlink" title="7.简述PETS渗透测试标准。"></a>7.简述PETS渗透测试标准。</h3><blockquote><p>PETS (Penetration Testing Execution Standard) 是一种渗透测试标准，其目的是帮助渗透测试人员开展有效的测试，并为客户提供全面的渗透测试报告。PETS 标准包括以下阶段：</p><ol><li>确定范围：定义测试的目标、边界和规则。</li><li>收集信息：通过各种手段搜集测试目标的信息，包括网络拓扑、操作系统、应用程序等等。</li><li>识别漏洞：通过各种手段识别目标系统的漏洞，包括端口扫描、漏洞扫描、手工测试等等。</li><li>利用漏洞：利用已知或发现的漏洞，获取目标系统的敏感信息或控制权。</li><li>维持访问：保持攻击者对目标系统的持久访问权限。</li><li>分析漏洞：对已发现的漏洞进行分析，包括漏洞利用效果、影响范围、风险等等。</li><li>编写报告：撰写详细的渗透测试报告，包括测试目的、测试方法、测试结果、建议改进等等。</li><li>清除痕迹：在测试结束后，清除所有与测试相关的痕迹，以确保不留下任何安全漏洞。</li></ol><p>PETS 标准的主要特点是：明确的测试流程、可重复性和标准化、详细的测试报告。</p></blockquote><h3 id="8-简述渗透测试资源的定义。"><a href="#8-简述渗透测试资源的定义。" class="headerlink" title="8.简述渗透测试资源的定义。"></a>8.简述渗透测试资源的定义。</h3><blockquote><p>泛指一切实施渗透测试系统所依赖的软硬件、知识与信息</p><p>分为有形、无形</p><p>无形是指知识与信息，包括漏洞库、字典、社会工程库、系统源代码、指纹特征。</p><p>有形是指设备、软件、人力资源为主</p></blockquote><h3 id="9-简述渗透测试的漏洞资源。"><a href="#9-简述渗透测试的漏洞资源。" class="headerlink" title="9.简述渗透测试的漏洞资源。"></a>9.简述渗透测试的漏洞资源。</h3><blockquote><p>漏洞库是记录漏洞信息的数据库。有助于为安全厂商基于漏洞发现和攻击防护类的产品提供数据和数据支持，政府机构指导制定未来的安全策略。</p></blockquote><h3 id="10-简述渗透测试的计算资源。"><a href="#10-简述渗透测试的计算资源。" class="headerlink" title="10.简述渗透测试的计算资源。"></a>10.简述渗透测试的计算资源。</h3><blockquote><p>渗透测试往往需要用密码分析对系统认证进行突破，而密码分析通常需要密集、高质量的计算资源</p></blockquote><h2 id="第四章：渗透测试信息收集与分析"><a href="#第四章：渗透测试信息收集与分析" class="headerlink" title="第四章：渗透测试信息收集与分析"></a>第四章：渗透测试信息收集与分析</h2><h3 id="1-渗透测试的信息有哪些？"><a href="#1-渗透测试的信息有哪些？" class="headerlink" title="1.渗透测试的信息有哪些？"></a>1.渗透测试的信息有哪些？</h3><blockquote></blockquote><h3 id="2-渗透测试信息的收集方法有哪些？"><a href="#2-渗透测试信息的收集方法有哪些？" class="headerlink" title="2.渗透测试信息的收集方法有哪些？"></a>2.渗透测试信息的收集方法有哪些？</h3><blockquote></blockquote><h3 id="3-公开信息有哪些？如何进行收集？"><a href="#3-公开信息有哪些？如何进行收集？" class="headerlink" title="3.公开信息有哪些？如何进行收集？"></a>3.公开信息有哪些？如何进行收集？</h3><blockquote></blockquote><h3 id="4-解释什么是Google-Hacking"><a href="#4-解释什么是Google-Hacking" class="headerlink" title="4.解释什么是Google Hacking"></a>4.解释什么是Google Hacking</h3><blockquote></blockquote><h3 id="5-什么是主机指纹信息？"><a href="#5-什么是主机指纹信息？" class="headerlink" title="5.什么是主机指纹信息？"></a>5.什么是主机指纹信息？</h3><blockquote></blockquote><h3 id="6-如何探测目标系统的安防设备信息？"><a href="#6-如何探测目标系统的安防设备信息？" class="headerlink" title="6.如何探测目标系统的安防设备信息？"></a>6.如何探测目标系统的安防设备信息？</h3><blockquote></blockquote><h3 id="7-端口扫描有哪些方法？"><a href="#7-端口扫描有哪些方法？" class="headerlink" title="7.端口扫描有哪些方法？"></a>7.端口扫描有哪些方法？</h3><blockquote></blockquote><h3 id="8-简述漏洞扫描的过程。"><a href="#8-简述漏洞扫描的过程。" class="headerlink" title="8.简述漏洞扫描的过程。"></a>8.简述漏洞扫描的过程。</h3><blockquote></blockquote><h3 id="9-简述漏洞扫描器的结构。"><a href="#9-简述漏洞扫描器的结构。" class="headerlink" title="9.简述漏洞扫描器的结构。"></a>9.简述漏洞扫描器的结构。</h3><blockquote></blockquote><h3 id="10-如何进行目标系统网络拓扑探测？"><a href="#10-如何进行目标系统网络拓扑探测？" class="headerlink" title="10.如何进行目标系统网络拓扑探测？"></a>10.如何进行目标系统网络拓扑探测？</h3><blockquote></blockquote><h3 id="11-什么是网络态势图？"><a href="#11-什么是网络态势图？" class="headerlink" title="11.什么是网络态势图？"></a>11.什么是网络态势图？</h3><blockquote></blockquote><h3 id="12-解释网络嗅探的原理。"><a href="#12-解释网络嗅探的原理。" class="headerlink" title="12.解释网络嗅探的原理。"></a>12.解释网络嗅探的原理。</h3><blockquote></blockquote><h3 id="13-如何进行流量分析？流量分析可以提供哪些信息？"><a href="#13-如何进行流量分析？流量分析可以提供哪些信息？" class="headerlink" title="13.如何进行流量分析？流量分析可以提供哪些信息？"></a>13.如何进行流量分析？流量分析可以提供哪些信息？</h3><blockquote></blockquote><h3 id="14-什么是正向工程、逆向工程、再工程？关系如何？"><a href="#14-什么是正向工程、逆向工程、再工程？关系如何？" class="headerlink" title="14.什么是正向工程、逆向工程、再工程？关系如何？"></a>14.什么是正向工程、逆向工程、再工程？关系如何？</h3><blockquote></blockquote><h2 id="第五章：服务器端渗透测试"><a href="#第五章：服务器端渗透测试" class="headerlink" title="第五章：服务器端渗透测试"></a>第五章：服务器端渗透测试</h2><h2 id="第六章：客户端渗透测试"><a href="#第六章：客户端渗透测试" class="headerlink" title="第六章：客户端渗透测试"></a>第六章：客户端渗透测试</h2><h2 id="第七章：网络设备渗透测试"><a href="#第七章：网络设备渗透测试" class="headerlink" title="第七章：网络设备渗透测试"></a>第七章：网络设备渗透测试</h2><h2 id="第八章：后渗透测试"><a href="#第八章：后渗透测试" class="headerlink" title="第八章：后渗透测试"></a>第八章：后渗透测试</h2><h2 id="第九章：社会工程学渗透测试"><a href="#第九章：社会工程学渗透测试" class="headerlink" title="第九章：社会工程学渗透测试"></a>第九章：社会工程学渗透测试</h2><h2 id="第十章：工控网络渗透测试"><a href="#第十章：工控网络渗透测试" class="headerlink" title="第十章：工控网络渗透测试"></a>第十章：工控网络渗透测试</h2><h2 id="第十一章：无线网络渗透测试"><a href="#第十一章：无线网络渗透测试" class="headerlink" title="第十一章：无线网络渗透测试"></a>第十一章：无线网络渗透测试</h2><h2 id="第十二章：渗透测试自动化框架"><a href="#第十二章：渗透测试自动化框架" class="headerlink" title="第十二章：渗透测试自动化框架"></a>第十二章：渗透测试自动化框架</h2><h2 id="第十三章：渗透测试程序设计"><a href="#第十三章：渗透测试程序设计" class="headerlink" title="第十三章：渗透测试程序设计"></a>第十三章：渗透测试程序设计</h2><h2 id="第十四章：渗透测试质量控制"><a href="#第十四章：渗透测试质量控制" class="headerlink" title="第十四章：渗透测试质量控制"></a>第十四章：渗透测试质量控制</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;本书是《网络安全渗透测试》王晓东 西安电子科技大学出版社.&lt;/p&gt;
&lt;p&gt;在信息安全领域中，渗透测试是公认度非常高的新型安全测试方法。从其机</summary>
      
    
    
    
    <category term="网络工程" scheme="http://giyayonlib.com/categories/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B/"/>
    
    <category term="网络安全" scheme="http://giyayonlib.com/categories/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    <category term="渗透测试" scheme="http://giyayonlib.com/categories/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="测试" scheme="http://giyayonlib.com/tags/%E6%B5%8B%E8%AF%95/"/>
    
    <category term="安全" scheme="http://giyayonlib.com/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://giyayonlib.com/2023/02/22/hello-world/"/>
    <id>http://giyayonlib.com/2023/02/22/hello-world/</id>
    <published>2023-02-22T05:12:47.574Z</published>
    <updated>2023-02-22T05:12:47.574Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
